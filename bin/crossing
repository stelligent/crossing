#!/usr/bin/env ruby

require 'trollop'
require 'crossing'

SUB_COMMANDS = %w(get put).freeze
global_opts = Trollop.options do
  opt :region, 'The region to look for the KMS Key in', default: 'us-east-1'
  banner 'utility for storing and retrieving files in S3 in a secure manner
  available commands:

    put -- store a file in S3
    get -- retrieve a file from S3

  use --help with either command for more information.
  '
  stop_on SUB_COMMANDS
end

cmd = ARGV.shift
cmd_opts =
  case cmd
  when 'put'
    Trollop.options do
      opt :file, 'the path to the file to store', required: true, type: String
      opt :bucket, 'the bucket to store the file in', required: true, type: String
      opt :kmskeyid, 'the kms key id of the master KMS key (conditionally required for put)', type: String
    end
  when 'get'
    Trollop.options do
      opt :file, 'the name of the file to retrieve', required: true, type: String
      opt :bucket, 'the bucket the file is stored in', required: true, type: String
    end
  else
    Trollop.die 'usage: crossing [get|put] [parameters]'
  end

kms = Aws::KMS::Client.new region: global_opts[:region]
s3 = Aws::S3::Encryption::Client.new(
  kms_key_id: cmd_opts[:kmskeyid],
  kms_client: kms
)

crossing = Crossing.new(s3)

case cmd
when 'put'
  crossing.put(cmd_opts[:bucket], cmd_opts[:file])
when 'get'
  puts 'not implemented yet'
else
  raise "unknown subcommand #{cmd}"
end
